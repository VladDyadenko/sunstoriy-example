{"version":3,"file":"static/js/422.bba7f57b.chunk.js","mappings":"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","sources":["components/Teacher/Schemas/schema.js","components/Teacher/TeacherForm/TeacherForm.styled.js","components/Teacher/TeacherForm/TeacherForm.jsx","redux/teacher/api.js","page/TeacherPage/TeacherPage.jsx","redux/teacher/teacherSelector.js","ui/UpdateAvatar/UpdateAvatar.styled.js","ui/UpdateAvatar/UpdateAvatar.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const initialValuesTeacherForm = {\n  name: '',\n  surname: '',\n  teacherImage: '',\n  phone: '',\n  email: '',\n  color: '',\n  about: '',\n  specialization: [],\n};\n\nexport const schemaTeacherUpdate = yup.object().shape({\n  name: yup\n    .string()\n    .required(\"Ім'я обов'язкове!\")\n    .min(2, 'Закоротке!')\n    .max(40, 'Задовге!'),\n  surname: yup.string().min(2, 'Закоротке!').max(40, 'Задовге!'),\n  price: yup.number(),\n});\nexport const options = [\n  {\n    value: 'Спеціаліст з сенсорної інтеграції',\n    label: 'Спеціаліст з сенсорної інтеграції',\n  },\n  {\n    value: 'Психолог',\n    label: 'Психолог',\n  },\n  {\n    value: 'Логопед',\n    label: 'Логопед',\n  },\n  {\n    value: 'Корекційний педагог',\n    label: 'Корекційний педагог',\n  },\n  {\n    value: 'Педагог початкових класів',\n    label: 'Педагог початкових класів',\n  },\n  {\n    value: 'Вихователь',\n    label: 'Вихователь',\n  },\n  {\n    value: 'Підготовка до школи',\n    label: 'Підготовка до школи',\n  },\n];\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const FormTeacher = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 25px 15px 40px 15px;\n  width: 375px;\n\n  @media (min-width: 768px) {\n    width: 768px;\n  }\n  @media (min-width: 1280px) {\n    width: 1280px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\nexport const TeacherAddTitle = styled.p`\n  width: 100%;\n  font-family: 'RobotoSlab';\n\n  font-weight: 500;\n  font-size: 24px;\n  color: var(--main-green);\n  margin: 0;\n  text-align: center;\n`;\n\nexport const FormImgContainer = styled.div`\n  display: flex;\n  width: 100%;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    gap: 30px;\n  }\n`;\nexport const NameFormTeacher = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n  justify-content: space-between;\n  width: 100%;\n  gap: 20px;\n`;\nexport const FieldTeacher = styled(Field)`\n  width: 100%;\n  height: 40px;\n  max-width: 400px;\n\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n`;\nexport const ErrorInfo = styled.p`\n  color: red;\n`;\nexport const TextAreaTitle = styled.label`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  margin-bottom: 5px;\n  margin-top: 15px;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\nexport const ContactDescr = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  min-width: 130px;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\n\nexport const ContactContainer = styled.div`\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  gap: 10px;\n  text-align: center;\n  justify-content: start;\n`;\nexport const SelectDescr = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 18px;\n  color: var(--main-green);\n  text-align: center;\n\n  @media (min-width: 768px) {\n    text-align: start;\n  }\n`;\nexport const SelectContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: start;\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 10px;\n  }\n`;\n\nexport const FieldTextarea = styled(Field)`\n  width: 100%;\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n  margin-bottom: 20px;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n`;\nexport const FormButton = styled.button`\n  border-radius: 4px;\n  margin: 0 auto;\n  width: 200px;\n  background-color: var(--bg-main-color);\n  color: var(--header-main-color);\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 10px 10px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 18px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--main-green);\n    border-color: var(--header-main-color);\n  }\n`;\n\nexport const ColorWrapper = styled.div`\n  width: 100%;\n  max-width: 400px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  gap: 10px;\n`;\n\nexport const FieldColor = styled(Field)`\n  width: 100px;\n  border-color: var(--main-green);\n  cursor: pointer;\n`;\n\nexport const FieldTeacherPhone = styled(Field)`\n  height: 40px;\n  width: 100%;\n  padding: 12px 20px;\n  color: #2a2a2a;\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  border: solid 2px var(--bg-main-color);\n  border-radius: 6px;\n  opacity: 0.8;\n  background-color: transparent;\n\n  &:focus-visible {\n    border: solid 2px var(--main-green);\n  }\n\n  @media (min-width: 768px) {\n    max-width: 400px;\n    flex: 1;\n  }\n`;\nexport const TeacherPhoneTitle = styled.label`\n  font-family: 'RobotoSlab';\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--main-green);\n\n  @media (min-width: 768px) {\n    width: 110px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport { Select } from 'antd';\nimport { CirclesWithBar } from 'react-loader-spinner';\nimport {\n  initialValuesTeacherForm,\n  options,\n  schemaTeacherUpdate,\n} from '../Schemas/schema';\nimport {\n  ColorWrapper,\n  ContactContainer,\n  ContactDescr,\n  ErrorInfo,\n  FieldColor,\n  FieldTeacher,\n  FieldTeacherPhone,\n  FieldTextarea,\n  FormButton,\n  FormImgContainer,\n  FormTeacher,\n  NameFormTeacher,\n  SelectContainer,\n  SelectDescr,\n  TeacherAddTitle,\n  TextAreaTitle,\n} from './TeacherForm.styled';\nimport UpdateAvatar from 'ui/UpdateAvatar/UpdateAvatar';\nimport { addTeacher, updateTeacher } from 'redux/teacher/teacherOperetion';\nimport { selectTeacherOperetion } from 'redux/teacher/teacherSelector';\n\nconst TeacherForm = ({ teacher }) => {\n  const [valuesTeacherForm, setValuesChildForm] = useState(\n    initialValuesTeacherForm\n  );\n  const [teacherImage, setTeacherImage] = useState('');\n  const [teacherSpecialization, setTeacherSpecialization] = useState([]);\n  const [color, setColor] = useState('#0456BA');\n  const [buttonView, setButtonView] = useState(true);\n\n  const operetion = useSelector(selectTeacherOperetion);\n\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const source = searchParams.get('source');\n  useEffect(() => {\n    if (source === 'buttonViewing') {\n      setButtonView(false);\n    }\n  }, [source]);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (teacher) {\n      const teacherData = {\n        name: teacher.name ? teacher.name : '',\n        surname: teacher.surname ? teacher.surname : '',\n        teacherImage: teacher.teacherImage ? teacher.teacherImage : '',\n        phone: teacher.phone ? teacher.phone : '',\n        email: teacher.email ? teacher.email : '',\n        color: teacher.color ? teacher.color : '#0456BA',\n        about: teacher.about ? teacher.about : '',\n        specialization:\n          teacher.specialization &&\n          teacher.specialization.length === 1 &&\n          teacher.specialization[0].trim() === ''\n            ? []\n            : teacher.specialization,\n      };\n      setValuesChildForm(teacherData);\n      setTeacherImage(teacherData.teacherImage);\n      setTeacherSpecialization(teacherData.specialization);\n      setColor(teacherData.color);\n    }\n  }, [teacher]);\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={valuesTeacherForm}\n        validationSchema={schemaTeacherUpdate}\n        onSubmit={values => {\n          if (buttonView) {\n            if (teacher) {\n              const id = teacher._id;\n              const combinedData = { id, values };\n              dispatch(updateTeacher(combinedData)).then(() => {\n                navigate('/teachers');\n              });\n            } else {\n              dispatch(addTeacher(values)).then(() => {\n                if (source === '/lesson') {\n                  navigate(-1);\n                } else navigate('/teachers');\n              });\n            }\n          } else {\n            navigate(-1);\n            setButtonView(true);\n          }\n        }}\n      >\n        {({ errors, touched, values, setFieldValue }) => (\n          <FormTeacher>\n            <TeacherAddTitle>Картка фахівця</TeacherAddTitle>\n            <FormImgContainer>\n              <UpdateAvatar\n                avatar={teacherImage}\n                fileName=\"teacherImage\"\n                setFieldValue={setFieldValue}\n              />\n              <NameFormTeacher>\n                <FieldTeacher name=\"name\" type=\"text\" placeholder=\"Ім'я\" />\n                {touched.name && errors.name && (\n                  <ErrorInfo>{errors.name}</ErrorInfo>\n                )}\n\n                <FieldTeacher\n                  name=\"surname\"\n                  type=\"text\"\n                  placeholder=\"Фамілія\"\n                />\n                {errors.surname && <ErrorInfo>{errors.surname}</ErrorInfo>}\n                <ColorWrapper>\n                  <TextAreaTitle>Колір для розкладу:</TextAreaTitle>\n                  <FieldColor\n                    name=\"color\"\n                    type=\"color\"\n                    value={color}\n                    onChange={event => {\n                      const selectedColor = event.target.value;\n                      setColor(selectedColor);\n                      setFieldValue('color', selectedColor);\n                    }}\n                  />\n                </ColorWrapper>\n              </NameFormTeacher>\n            </FormImgContainer>\n            <ContactContainer>\n              <ContactDescr>Телефон:</ContactDescr>\n              <FieldTeacherPhone\n                name=\"phone\"\n                type=\"tel\"\n                autoComplete=\"off\"\n                placeholder=\"+380(__)___ __ __\"\n              />\n            </ContactContainer>\n            <ContactContainer>\n              <ContactDescr>e-mail:</ContactDescr>\n              <FieldTeacherPhone\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"off\"\n                placeholder=\"example@example.com\"\n              />\n            </ContactContainer>\n            <SelectContainer>\n              <SelectDescr>Спеціалізація:</SelectDescr>\n              <Select\n                mode=\"multiple\"\n                style={{\n                  width: '100%',\n                  maxWidth: '400px',\n                  marginTop: '10px',\n                  border: '2px solid #68bf48',\n                  borderRadius: '8px',\n                }}\n                value={teacherSpecialization}\n                onChange={e => {\n                  setTeacherSpecialization(e);\n                  setFieldValue(\n                    'specialization',\n                    e ? e : teacherSpecialization\n                  );\n                }}\n                options={options}\n              />\n            </SelectContainer>\n\n            <TextAreaTitle>Додаткова інформація:</TextAreaTitle>\n            <FieldTextarea name=\"about\" component=\"textarea\" rows={6} />\n\n            <FormButton type=\"submit\">\n              {operetion === 'addTeacher' ? (\n                <CirclesWithBar\n                  height=\"21\"\n                  width=\"50\"\n                  color=\"#ffffff\"\n                  wrapperStyle={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                  visible={true}\n                  ariaLabel=\"circles-with-bar-loading\"\n                />\n              ) : buttonView ? (\n                'Зберегти зміни'\n              ) : (\n                'Назад'\n              )}\n            </FormButton>\n          </FormTeacher>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default TeacherForm;\n","import axios from 'axios';\n\nexport const getTeacherById = async id => {\n  try {\n    const { data } = await axios.get(`/teacher/teacher/${id}`);\n    return data;\n  } catch (err) {\n    console.log(err.message);\n  }\n};\n","import { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\nimport TeacherForm from 'components/Teacher/TeacherForm/TeacherForm';\nimport { useEffect, useState } from 'react';\nimport { getTeacherById } from 'redux/teacher/api';\n\nconst TeacherPage = () => {\n  const [teacher, setTeacher] = useState('');\n  const { teacherId } = useParams();\n  useEffect(() => {\n    if (!teacherId) {\n      return;\n    }\n    async function fetchTeachers() {\n      try {\n        const teacher = await getTeacherById(teacherId);\n        if (!teacher) {\n          return;\n        }\n        setTeacher(teacher);\n      } catch (err) {\n        Notify.failure('Child not found');\n      }\n    }\n    fetchTeachers();\n  }, [teacherId]);\n  return (\n    <>\n      <TeacherForm teacher={teacher} />\n    </>\n  );\n};\n\nexport default TeacherPage;\n","export const selectTeachers = state => state.teachers.teacher;\nexport const selectTeacherOperetion = state => state.teachers.operetion;\n","import styled from 'styled-components';\nimport { BsFillFileEarmarkPersonFill } from 'react-icons/bs';\n\nexport const PreviewFotoContainer = styled.div`\n  width: 110px;\n  height: 110px;\n  background-color: #c0c0c0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 4px;\n`;\nexport const UpdateFileButton = styled.button`\n  border-radius: 4px;\n  background-color: var(--main-dark-blue);\n  color: var(--header-main-color);\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 5px 10px;\n  font-family: 'RobotoSlab';\n  font-weight: 400;\n  font-size: 13px;\n  cursor: pointer;\n  transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: var(--main-green);\n    border-color: var(--header-main-color);\n  }\n`;\nexport const FotoBlock = styled.div`\n  padding: 10px 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const ImagePreview = styled.img`\n  display: block;\n  border-radius: 4px;\n`;\nexport const FotoIcon = styled(BsFillFileEarmarkPersonFill)`\n  width: 30px;\n  height: 30px;\n  fill: #808080;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport {\n  FotoBlock,\n  FotoIcon,\n  ImagePreview,\n  PreviewFotoContainer,\n  UpdateFileButton,\n} from './UpdateAvatar.styled';\n\nfunction UpdateAvatar({ setFieldValue, avatar, fileName }) {\n  const fileRef = useRef(null);\n\n  const [preview, setPreview] = useState(avatar);\n  useEffect(() => {\n    setPreview(avatar);\n  }, [avatar]);\n  return (\n    <>\n      <input\n        type=\"file\"\n        hidden\n        ref={fileRef}\n        onChange={event => {\n          const selectedFile = event.target.files[0];\n          setFieldValue(`${fileName}`, selectedFile);\n          const reader = new FileReader();\n          reader.readAsDataURL(selectedFile);\n          reader.onload = () => {\n            setPreview(reader.result);\n          };\n        }}\n      />\n      <FotoBlock>\n        {preview ? (\n          <ImagePreview src={preview} alt=\"preview\" width={130} height={110} />\n        ) : (\n          <PreviewFotoContainer>\n            <FotoIcon />\n          </PreviewFotoContainer>\n        )}\n        <UpdateFileButton\n          type=\"button\"\n          onClick={() => {\n            fileRef.current.click();\n          }}\n        >\n          Додайте фото\n        </UpdateFileButton>\n      </FotoBlock>\n    </>\n  );\n}\n\nexport default UpdateAvatar;\n"],"names":["initialValuesTeacherForm","name","surname","teacherImage","phone","email","color","about","specialization","schemaTeacherUpdate","yup","shape","required","min","max","price","options","value","label","FormTeacher","styled","Form","_templateObject","_taggedTemplateLiteral","TeacherAddTitle","p","_templateObject2","FormImgContainer","div","_templateObject3","NameFormTeacher","_templateObject4","FieldTeacher","Field","_templateObject5","ErrorInfo","_templateObject6","TextAreaTitle","_templateObject7","ContactDescr","_templateObject8","ContactContainer","_templateObject9","SelectDescr","_templateObject10","SelectContainer","_templateObject11","FieldTextarea","_templateObject12","FormButton","button","_templateObject13","ColorWrapper","_templateObject14","FieldColor","_templateObject15","FieldTeacherPhone","_templateObject16","_templateObject17","_ref","teacher","valuesTeacherForm","setValuesChildForm","useState","setTeacherImage","teacherSpecialization","setTeacherSpecialization","setColor","buttonView","setButtonView","operetion","useSelector","selectTeacherOperetion","location","useLocation","source","URLSearchParams","search","get","useEffect","dispatch","useDispatch","navigate","useNavigate","teacherData","length","trim","_jsx","_Fragment","children","Formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","combinedData","id","_id","updateTeacher","then","addTeacher","_ref2","errors","touched","setFieldValue","_jsxs","UpdateAvatar","avatar","fileName","type","placeholder","onChange","event","selectedColor","target","autoComplete","Select","mode","style","width","maxWidth","marginTop","border","borderRadius","e","component","rows","CirclesWithBar","height","wrapperStyle","display","alignItems","justifyContent","visible","ariaLabel","TeacherPage","setTeacher","teacherId","useParams","async","data","axios","concat","err","console","log","message","getTeacherById","Notify","failure","fetchTeachers","TeacherForm","selectTeachers","state","teachers","PreviewFotoContainer","UpdateFileButton","FotoBlock","ImagePreview","img","FotoIcon","BsFillFileEarmarkPersonFill","fileRef","useRef","preview","setPreview","hidden","ref","selectedFile","files","reader","FileReader","readAsDataURL","onload","result","src","alt","onClick","current","click"],"sourceRoot":""}